import React, { useState } from "react";
import { ToastContainer, toast } from "react-toastify";
import { postApiCall } from "../Utils/Utils";
import { Form } from "react-bootstrap";
import { useNavigate } from "react-router-dom";

const Register = () => {
  const navigate = useNavigate();
  const [data, setData] = useState({
    file: "",
    fullName: "",
    email: "",
    phone: "",
    age: "",
    gender: "",
    location: "",
    purposeId: "",
    description: "",
    hostEmail: "",
    fromTime: "",
    toTime: "",
    idProof: "",
    idProofNumber: "",
  });

  const validEmail = "^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$";
  const phonePattern = /^\d{10}$/;

  const handleOnChange = (e) => {
    setData({ ...data, [e.target.name]: e.target.value });
  };
  
  const handleOnPhoneChange=(e)=>{
      setData({...data, [e.target.name]:e.target.value.replace(/\D/g,'')});
  }


  const [formVal, setFormVal] = useState([
    { e_name: "", mobile: "", mail: "" },
  ]);
           
  const addForm = () => {
    const isArrayNotEmpty=formVal.every((form)=>form.e_name || form.mobile || form.mail)
    if (isArrayNotEmpty) {
      setFormVal([...formVal, { e_name: "", mobile: "", mail: "" }]);
    }
  };  
  
  const deleteForm = (index) => {
    if(formVal.length>1){
    let formArray = [...formVal];
    formArray.splice(index, 1);
    setFormVal(formArray);
    }
  }; 
  
  const handleOnMultipleInChange = (event, index, name) => {
    {
      let formArray = [...formVal];
      formArray[index][event.target.name] = event.target.value;
      setFormVal(formArray);
    }
  };

  const handleOnMobileChange = (event, index, name) => {
    {
      let formArray = [...formVal];
      formArray[index][event.target.name] = event.target.value.replace(/\D/g,'');
      setFormVal(formArray);
    }
  };

  const handleOnSubmit = (e) => {
    e.preventDefault();
    if (!data.file) {
      toast.error("Please upload image");
    } else if (!data.fullName) {
      toast.error("Please enter full name");
    } else if (!data.email) {
      toast.error("Please enter email");
    } else if (!data.email.match(validEmail)) {
      toast.error("Please enter the valid");
    } else if (!data.phone) {
      toast.error("Please enter phone number");
    } else if (!data.phone.match(phonePattern)) {
      toast.error("Please enter valid phone number");
    } else if (!data.age) {
      toast.error("Please enter age");
    } else if (data.age < 1 || data.age > 122) {
      toast.error("Please enter valid age");
    } else if (!data.gender) {
      toast.error("Please select gender");
    } else if (!data.location) {
      toast.error("please enter location");
    } else if (!data.purposeId) {
      toast.error("please enter purpose id");
    } else if (!data.description) {
      toast.error("Please enter description");
    } else if (!data.hostEmail) {
      toast.error("Please enter host email");
    } else if (!data.fromTime) {
      toast.error("Please enter from time");
    } else if (!data.toTime) {
      toast.error("Please enter to time");
    } else if (!data.idProof) {
      toast.error("Please enter id proof");
    } else if (!data.idProofNumber) {
      toast.error("Please enter id proof number");
    } else {
      let postData = {
        file: data.file,
        fullName: data.fullName,
        phone: data.phone,
        email: data.email,
        age: data.age,
        gender: data.gender,
        location: data.location,
        purposeId: data.purposeId,
        description: data.description,
        hostEmail: data.hostEmail,
        fromTime: data.fromTime,
        toTime: data.toTime,
        idProofName: data.idProof,
        idProofNumber: data.idProofNumber,
        personsDetails: formVal.map((id) => ({
          name: id.e_name,
          mobile: id.mobile,
          email: id.mail,
        })),
      };
      postApiCall("merchant/auth/visitor/register", postData, (response) => {
        if (response.success) {
          console.log(response);
          toast.success(response.message);
        } else {
          toast.error("error occured");
        }
      });
    }
  };
  return (
    <div className="container">
      <div className="row">
        <div className="s_register-form">
          <h1 className="s_heading">RegisterUser</h1>
          <div className="s_form-section">
            <label className="col-3 s_form-label">
              Image<span className="s_asterisk">*</span>
              <br />
              <input
                className="form-control s_input"
                type="file"
                name="file"
                value={data.file}
                onChange={handleOnChange}
              />
              </label>
            <label className="col-3 s_form-label">
              Full Name<span className="s_asterisk">*</span><br />
              <input
                className="form-control s_input"
                type="text"
                name="fullName"
                value={data.fullName}
                onChange={handleOnChange}
              />
            </label>
            <label className="col-3 s_form-label">
              Email<span className="s_asterisk">*</span><br />
              <input
                className="form-control s_input"
                type="email"
                name="email"
                value={data.email}
                onChange={handleOnChange}
              />
            </label>
            <label className="col-3 s_form-label">
              Phone Number<span className="s_asterisk">*</span><br />
              <input
                className="form-control s_input"
                type="text"
                name="phone"
                value={data.phone}
                maxLength={10}
                onChange={handleOnPhoneChange}
              />
            </label>
          </div>

          <div className="s_form-section">
            <label className="col-3 s_form-label">
              Age<span className="s_asterisk">*</span><br />
              <input
                className="form-control s_input"
                type="number"
                name="age"
                value={data.age}
                onChange={handleOnChange}
              />
            </label>

            <label className="col-3 s_form-label">
              Gender<span className="s_asterisk">*</span>
              <br />
              <Form.Select
                aria-label="Default select example"
                className="form-control s_input"
                name="gender"
                value={data.gender}
                onChange={handleOnChange}
              >
                <option value="">Select</option>
                <option value="male">Male</option>
                <option value="female">Female</option>
                <option value="Others">Others</option>
              </Form.Select>
            </label>
            <label className="col-3 s_form-label">
              Location<span className="s_asterisk">*</span>
              <br />
              <Form.Select
                aria-label="Default select example"
                className="form-control s_input"
                name="location"
                value={data.location}
                onChange={handleOnChange}
              >
                <option value="Select">Select</option>
                <option value="Chennai">Chennai</option>
                <option value="Bangalore">Bangalore</option>
                <option value="Mumbai">Mumbai</option>
              </Form.Select>
            </label>
            <label className="col-3 s_form-label">
              Purpose Id<span className="s_asterisk">*</span>
              <br />
              <input
                className="form-control s_input"
                type="text"
                name="purposeId"
                value={data.purposeId}
                onChange={handleOnChange}
              />
            </label>
          </div>
          <div className="s_form-section">
            <label className="col-3 s_form-label">
              Description<span className="s_asterisk">*</span>
              <br />
              <input
                className="form-control s_input"
                type="text"
                name="description"
                value={data.description}
                onChange={handleOnChange}
              />
            </label>

            <label className="col-3 s_form-label">
              Host Email<span className="s_asterisk">*</span><br />
              <input
                className="form-control s_input"
                type="email"
                name="hostEmail"
                value={data.hostEmail}
                onChange={handleOnChange}
              />
            </label>
            <label className="col-3 s_form-label">
              From Time<span className="s_asterisk">*</span>
              <br />
              <input
                className="form-control s_input"
                name="fromTime"
                type="datetime-local"
                value={data.fromTime}
                onChange={handleOnChange}
              />
            </label>
            <label className="col-3 s_form-label">
              To Time<span className="s_asterisk">*</span>
              <br />
              <input
                className="form-control s_input"
                type="datetime-local"
                name="toTime"
                value={data.toTime}
                onChange={handleOnChange}
              />
            </label>
          </div>

          <div className="s_form-section">
            <label className="col-3 s_form-label">
              Id Proof<span className="s_asterisk">*</span>
              <br />
              <input
                className="form-control s_input"
                type="text"
                name="idProof"
                value={data.idProof}
                onChange={handleOnChange}
              />
            </label>
            <label className="col-3 s_form-label">
              Id Proof Number<span className="s_asterisk">*</span>
              <br />
              <input
                className="form-control s_input"
                type="text"
                name="idProofNumber"
                value={data.idProofNumber}
                onChange={handleOnChange}
              />
            </label>
          </div>

          <h1 className="s_heading">Additional Visitors</h1>
          <div className="s_additional-visitors">
            {formVal.map((item, i) => (
              <div className="s_form-section">
                <div className="s_newForm">
                  <label className="col-3">
                    Name
                    <br />
                    <input
                      className="form-control s_input"
                      type="text"
                      name="e_name"
                      value={item.e_name}
                      onChange={(e) => handleOnMultipleInChange(e, i, "e_name")}
                    ></input>
                  </label>
                  <label className="col-3">
                    Phone Number
                    <br />
                    <input
                      className="form-control s_input"
                      type="text"
                      name="mobile"
                      maxLength={10}
                      value={item.mobile}
                      onChange={(e) => handleOnMobileChange(e, i, "mobile")}
                    ></input>
                  </label>
                  <label className="col-3">
                    Email
                    <br />
                    <input
                      className="form-control s_input"
                      type="text"
                      name="mail"
                      value={item.mail}
                      onChange={(e) => handleOnMultipleInChange(e, i, "mail")}
                    ></input>
                  </label>
                  <button className="s_addbutton" onClick={() => addForm()}>
                    Add
                  </button>
                  <button
                    className="s_deletebutton"
                    onClick={() => deleteForm(i)}
                  >
                    Delete
                  </button>
                </div>
              </div>
            ))}
            <div>
              <button className="s_backbutton" onClick={(e) => navigate(-1)}>
                Back
              </button>
              <button className="s_register-button" onClick={handleOnSubmit}>
                Register
              </button>
            </div>
          </div>
        </div>
      </div>
      <ToastContainer />
    </div>
  );
};

export default Register;
